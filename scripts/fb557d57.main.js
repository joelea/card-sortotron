(function(){window.cardSortGenerator={Models:{},Collections:{},Views:{},Routers:{},init:function(){var a,b;return a=new this.Collections.CardSet,b=new this.Views.AppView({collection:a,el:"#app-anchor"}),b.Views=this.Views,b.render()}},$(function(){"use strict";return cardSortGenerator.init()})}).call(this),this.JST=this.JST||{},this.JST["app/scripts/templates/AddButton.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+='<div class="col-sm-6">\n  <button type="button" class="btn-default btn btn-lg card-container">\n    <span class="glyphicon glyphicon-plus" id="add-card">\n    </span>\n  </button>\n</div>\n';return __p},this.JST["app/scripts/templates/CardSet.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+="<p>Your content here.</p>\n\n";return __p},this.JST["app/scripts/templates/app.ejs"]=function(obj){obj||(obj={});{var __p="";_.escape}with(obj)__p+='<div class="card-sort-btns btn-group">\n  <button type="button" class="btn btn-default" id="print-button">Print</button>\n  <button type="button" class="btn btn-default" id="edit-button">Edit</button>\n  <button type="button" class="btn btn-default" id="save-button">Save</button>\n</div>\n\n<div class="row cards">\n  <div class="col-sm-6 card-container" id="add-card-button-container">\n    <button type="button" class="btn-default btn btn-lg card" id="add-card-button">\n      <span class="glyphicon glyphicon-plus" id="add-card">\n      </span>\n    </button>\n  </div>\n</div>\n';return __p},this.JST["app/scripts/templates/card.ejs"]=function(obj){obj||(obj={});{var __t,__p="";_.escape}with(obj)__p+='<div class="col-sm-6 card-container">\n  <div class="card">\n    <p>'+(null==(__t=card.get("text")||"")?"":__t)+"</p>\n  </div>\n</div>\n";return __p},this.JST["app/scripts/templates/cardSortPrintView.ejs"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj){for(var i=0;5>i;i++)__p+='\n  <div class="col-xs-6 card-container">\n    <div class="card">\n      <h2 class=\'card-title\'>Title</p>\n    </div>\n  </div>\n';__p+="\n\n\n",cards.forEach(function(a){__p+="\n\n  <div class='printed-page'>\n  ";for(var b=0;5>b;b++)__p+='\n\n    <div class="col-xs-6 card-container">\n      <div class="card">\n        <p>'+(null==(__t=a.get("text")||"")?"":__t)+"</p>\n      </div>\n    </div>\n\n  ";__p+="\n  </div>\n\n\n"}),__p+="\n\n"}return __p},this.JST["app/scripts/templates/editableCard.ejs"]=function(obj){obj||(obj={});{var __t,__p="";_.escape,Array.prototype.join}with(obj)__p+='<div class="col-sm-6 card-container">\n  <form class="form-horizontal" role="form" onSubmit="return false;">\n    <div class="form-group">\n      <div class="col-sm-12">\n        ',__p+=card.hasText()?'\n          <input type="textfield" class="card" autocomplete="off" id="card-text" value="'+(null==(__t=card.get("text"))?"":__t)+'" >\n        ':'\n          <input type="textfield" class="card" autocomplete="off" id="card-text" placeholder="Text">\n        ',__p+="\n      </div>\n    </div>\n  </form>\n</div>\n";return __p},function(){var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};cardSortGenerator.Views.AppView=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.template=JST["app/scripts/templates/app.ejs"],d.prototype.Views={},d.prototype.events={"click #add-card-button":"addCard","click #print-button":"print","click #edit-button":"edit"},d.prototype.render=function(){return this.$el.html(this.template()),null==this.subview&&(this.subview=new this.Views.CardSetView({collection:this.collection,el:".cards"})),this.subview.render()},d.prototype.addCard=function(){return console.log("add card button clicked"),this.collection.createNewCard()},d.prototype.print=function(){var a;return a=new this.Views.CardSortPrintView({collection:this.collection,el:".cards"}),a.render(),window.print()},d.prototype.edit=function(){return console.log("moving to edit"),console.log(this.subview),this.subview.setElement(".cards"),this.subview.render()},d}(Backbone.View)}.call(this),function(){"use strict";var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};cardSortGenerator.Views.CardView=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.template=JST["app/scripts/templates/card.ejs"],d.prototype.editableCardTemplate=JST["app/scripts/templates/editableCard.ejs"],d.prototype.className="card",d.prototype.events={"keypress form":"keyPressOnForm",change:"modelUpdated","click .card":"cardFocused","focusout .card":"cardUnfocused"},d.prototype.editable=!0,d.prototype.render=function(){var a;return a=this.editable?this.editableCardTemplate({card:this.model}):this.template({card:this.model}),this.$el.html(a),this.editable?this.focusOnField():void 0},d.prototype.focusOnField=function(){var a,b,c;return b=(null!=(c=this.model.get("text"))?c.length:void 0)||0,a=this.$("input").get(0),a.selectionStart=b,a.selectionEnd=b,a.focus()},d.prototype.cardFocused=function(){return this.editable?void 0:(this.editable=!0,this.render())},d.prototype.cardUnfocused=function(){return this.updateModelText(),this.editable=!1,this.render()},d.prototype.updateModelText=function(){var a;return a=this.$("#card-text").val(),this.model.set("text",a)},d.prototype.keyPressOnForm=function(a){var b;return b=13===a.keyCode,b?this.updateModelText():void 0},d.prototype.modelUpdated=function(){return this.editable=!1,this.render()},d}(Backbone.View)}.call(this),function(){"use strict";var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};cardSortGenerator.Models.CardModel=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.hasText=function(){return this.has("text")},d}(Backbone.Model)}.call(this),function(){"use strict";var a,b=function(a,b){return function(){return a.apply(b,arguments)}},c={}.hasOwnProperty,d=function(a,b){function d(){this.constructor=a}for(var e in b)c.call(b,e)&&(a[e]=b[e]);return d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype,a};cardSortGenerator.Collections.CardSet=function(c){function e(){return this.createNewCard=b(this.createNewCard,this),a=e.__super__.constructor.apply(this,arguments)}return d(e,c),e.prototype.model=cardSortGenerator.Models.CardModel,e.prototype.createNewCard=function(){return console.log("clicked"),this.add(new this.model)},e}(Backbone.Collection)}.call(this),function(){var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};cardSortGenerator.Views.CardSortPrintView=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.template=JST["app/scripts/templates/cardSortPrintView.ejs"],d.prototype.render=function(){return this.$el.html(this.template({cards:this.collection}))},d}(Backbone.View)}.call(this),function(){"use strict";var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};cardSortGenerator.Routers.CardRouter=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d}(Backbone.Router)}.call(this),function(){"use strict";var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};cardSortGenerator.Views.CardSetView=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.prototype.template=JST["app/scripts/templates/CardSet.ejs"],d.prototype.initialize=function(){return this.collection.on("add",this.cardAdded,this)},d.prototype.generateNewAnchorElement=function(){return this.$el.append("<div id='card-anchor'></div>"),this.$el.children("#card-anchor").last()},d.prototype.cardAdded=function(a){var b,c;return c=this.generateNewAnchorElement(),b=new cardSortGenerator.Views.CardView({model:a,el:c}),b.render(),this.repositionAddButton()},d.prototype.repositionAddButton=function(){var a;return a=$("#add-card-button-container"),a.detatch,$(".cards").append(a)},d}(Backbone.View)}.call(this);